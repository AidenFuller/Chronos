@page "/Admin/EditDegree"

@inject DegreeService DegreeService
@inject IToastService ToastService

<BlazoredTypeahead SearchMethod="SearchDegrees" @bind-Value="SelectedDegree" placeholder="Please search for the course to be removed..." EnableDropDown="true" ShowDropDownOnFocus="true">
    <SelectedTemplate Context="degree">
        Bachelor of @degree.Name
    </SelectedTemplate>
    <ResultTemplate Context="degree">
        Bachelor of @degree.Name
    </ResultTemplate>
</BlazoredTypeahead>

@if (SelectedDegree != null)
{
    <EditForm OnSubmit="ReplaceDegree" Model="SelectedDegree">
        <h4>Degree Name</h4>
        <InputText @bind-Value="SelectedDegree.Name" placeholder="Enter Degree Name" required />
        <h4>Amount Of Units</h4>
        <InputNumber step="20" @bind-Value="SelectedDegree.UnitLength" />
        <h4>Can it be completed internationally?</h4>
        <InputCheckbox @bind-Value="SelectedDegree.InternationalsAllowed" />
        <h4>How many Elective Units?</h4>
        <InputNumber step="10" @bind-Value="SelectedDegree.ElectiveUnits" />

        <button type="submit" class="submit-button submit-button-colour submit-button-animation">Submit Degree</button>
    </EditForm>
}


@code {
    private Degree SelectedDegree;
    private IEnumerable<Degree> Degrees;

    protected override async Task OnInitializedAsync()
    {
        Degrees = await DegreeService.GetAllDegreesAsync();
    }

    private async Task ReplaceDegree()
    {
        await DegreeService.ReplaceDegreeAsync(SelectedDegree);
        ToastService.ShowToast(ToastLevel.Success, $"The degree has been updated");
    }

    private async Task<IEnumerable<Degree>> SearchDegrees(string search)
    {
        return await Task.FromResult(Degrees.Where(x => x.Name.ToLower().Contains(search.ToLower())).OrderBy(x => x.Name).ToList()); //It will return degrees that contain the string in its name.
    }
}
