@inject DegreeService degreeService
@inject CourseService courseService 

<h1 class="heading-for-landing">Welcome to Chronos!</h1>
<section>
    <div>
        <hr />
        <div>
            <h4 class="heading-for-landing">Please insert your information below:</h4>
            <hr />
            <div class="form-alignment-left">
                <form action="login" method="POST">
                    <select class="degree-selection" name="degree">
                        <option value=""> Select a Degree</option>
                        @foreach (var d in degrees)
                        {
                            <option value="@d.Item1">@d.Item2</option>
                        }
                    </select>
                    <select name="semester">
                        <option value=""> What type of Semester are you doing></option>
                        <option value="Semester">Semester 1/2</option>
                        <option value="Part Time">Part Time Semester</option>
                        <option value="Trimester">Trimester</option>
                        <option value="SemesterWithAdditional">Semester 1/2 but willing to do Winter/Summer courses.</option>
                    </select>
                </form>
            </div>
            <div>
                <BlazoredTypeahead SearchMethod="SearchCourses"
                                   @bind-Values="SelectedCourse"
                                   Disabled="IsItDisabled"
                                   EnableDropDown="true"
                                   placeholder="Please enter a course...">
                    <SelectedTemplate Context="course">
                        @course.CourseCode (@course.Name) 
                    </SelectedTemplate>
                    <ResultTemplate Context="course">
                        @course.CourseCode (@course.Name) 
                    </ResultTemplate>
                </BlazoredTypeahead>
                <button @onclick="@(() => IsItDisabled = !IsItDisabled)">@(IsItDisabled ? "Enable" : "Disable")</button>
            </div>
        </div>
    </div>
</section>
<section>

    <h4 class="heading-for-landing">Please login below. (IN WORK)</h4>
    <hr />
    <div class="login-center">
        <!--Hide behind a button?-->
        <form action="login" method="POST">
            <label class="login-box-ui" for="username">Username: </label>
            <input type="text" id="username" name="username" />
            <label class="login-box-ui" for="password">Password: </label>
            <input type="password" id="password" name="password" />
            <hr />
            <input id="btn" type="submit" value="Login" name="button" />
            <input id="btn" type="reset" value="Reset" />
        </form>
    </div>  
</section>
<div class="additional-information">
    <h4>Information regarding this Project</h4>
    <p>You can do this!</p>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        IEnumerable<Degree> degreesFromDB = await degreeService.GetAllDegreesAsync(); //Grabs all the degrees from the database.

        degrees = degreesFromDB.Select(i => (i.DegreeID, i.Name));      //Create a new List for the Degrees that will hold the names and IDs.
        Courses = await courseService.GetAllCoursesAsync();
    }

    protected IEnumerable<Course> Courses { get; set; }
    private async Task<IEnumerable<Course>> SearchCourses(string search)
    {
        return await Task.FromResult(Courses.Where(x => x.CourseCode.ToLower().Contains(search.ToLower())).ToList());
    }

    private String Username;
    private IEnumerable<(int, String)> degrees;
    private IList<Course> SelectedCourse;
    private bool IsItDisabled;

    //private String Password;

    private void SubmitResults()
        {

        }



}
