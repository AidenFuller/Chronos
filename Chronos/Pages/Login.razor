@inject DegreeService degreeService
@inject CourseService courseService 

<h1>Welcome to Chronos!</h1>
<div>
    <section>
        <h4>Please login below. (IN WORK)</h4>
        <hr />
        <div>
            <form action="login" method="POST">
                <label for="username">Username: </label><br />
                <input type="text" id="username" name="username" />
                <label for="password">Password: </label>
                <input type="password" id="password" name="password" />
                <hr />
                <input id="btn" type="submit" value="Login" name="button" />
                <input id="btn" type="reset" value="Reset" />
            </form>
        </div>
        <hr />
    </section>
</div>
<div>
    <section>
        <h4>Please insert your information below:</h4>
        <hr />
        <div>
            <form action="login" method="POST">
                <select name="degree">
                    <option value=""> Select a Degree</option>
                    @foreach (var d in degrees)
                    {
                        <option value="@d.Item1">@d.Item2</option>
                    }
                </select>
                <select name="semester">
                    <option value=""> What type of Semester are you doing></option>
                    <option value="Semester">Semester 1/2</option>
                    <option value="Part Time">Part Time Semester</option>
                    <option value="Trimester">Trimester</option>
                    <option value="SemesterWithAdditional">Semester 1/2 but willing to do Winter/Summer courses.</option>
                </select>
            </form>
            <EditForm Model="Courses" OnValidSubmit="SubmitResults">
                <BlazoredTypeahead SearchMethod= "SearchCourses" @bind-Value="SelectedCourse">
                    <SelectedTemplate Context="course">
                        @course.CourseCode (@course.Name)
                    </SelectedTemplate>
                    <ResultTemplate Context="course">
                        @course.CourseCode (@course.Name) 
                    </ResultTemplate>
                </BlazoredTypeahead>
                <ValidationMessage For="@(() => SelectedCourse)" />
            </EditForm>
        </div>
    </section>
</div>
<div>
    <h4>Information regarding this Project</h4>
    <p>You can do this!</p>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        IEnumerable<Degree> degreesFromDB = await degreeService.GetAllDegreesAsync(); //Grabs all the degrees from the database.

        degrees = degreesFromDB.Select(i => (i.DegreeID, i.Name));      //Create a new List for the Degrees that will hold the names and IDs.
        Courses = await courseService.GetAllCoursesAsync();
    }

    protected IEnumerable<Course> Courses { get; set; }
    private async Task<IEnumerable<Course>> SearchCourses(string search)
    {
        return await Task.FromResult(Courses.Where(x => x.CourseCode.ToLower().Contains(search.ToLower())).ToList());
    }

    private String Username;
    private IEnumerable<(int, String)> degrees;
    private Course SelectedCourse;

    //private String Password;

    private void SubmitResults()
        {

        }



}
