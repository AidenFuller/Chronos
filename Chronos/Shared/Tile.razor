<style>
    .Tile {
        border-style: solid;
        border-radius: 20px;
        display: inline-block;
        text-align: center;
        /*font-size: small;*/
    }

        .Tile:hover {
            transition: .2s;
            transform: scale(1.1)
        }

    .Elective {
        background-color: #F2DD60
    }

    .Directed {
        background-color: #458EE7
    }

    .Core {
        background-color: #404040
    }

    .AddElective {
        background-color: #ffffff;
        border-color: #000000;
        color: #F2DD60
    }

    .AddDirected {
        background-color: #ffffff;
        border-color: #000000;
        color: #458EE7;
    }
</style>
<div class="Tile @tileClass" style="width:@width; height:@height;">

    @if (courseID == -1)
    {
        @if (tileType == 0)
        {
            //Core Course -- Should never go down this path
            <h1> ERROR </h1>
        }
        else if (tileType == 1)
        {
            //Directed Course
            <h1>+</h1>
        }
        else
        {
            //Elective
            <h1>+</h1>
        }
    }
    else
    {
        <h3> @courseCode </h3>
        <p> @courseTitle </p>
    }

</div>


@code {

    [Parameter] public int tileType { get; set; } //MAKE THIS AN ENUM
    [Parameter] public int courseID { get; set; } = -1;

    public string width { get; set; } = "200px";

    private string courseCode = "GetCourseCode()";
    private string courseTitle = "GetCourseTitle";

    private string height = "100px";


    private string tileClass;

    //Allows thw with to be changed by the parent timetable
    public void setWidth(string w)
    {
        width = w;
    }

    public void update()
    {
        switch (tileType)
        {
            case 0:
                tileClass = "Core";
                break;
            case 1:
                if (courseID == -1)
                {
                    tileClass = "AddDirected";
                }
                else
                {
                    tileClass = "Directed";
                }

                break;
            case 2:
                if (courseID == -1)
                {
                    tileClass = "AddElective";
                }
                else
                {
                    tileClass = "Elective";
                }
                break;
        }
    }


    protected override void OnInitialized()
    {
        update();
    }

}
