@using Chronos.Shared.Tiles;
@using Chronos.Shared.Modals;
@inject IToastService ToastService;

<CascadingValue Value="this">

    @if (CompletedFlag == false)
    {
        @foreach (TileData tile in Tiles)
        {
            <Tile Data=@tile />
        }

        <GhostTile show="@showGhost" />
    }
    else
    {
        @foreach (TileData tile in Tiles)
        {
            <Tile Data=@tile CompletedFlag=@CompletedFlag/>
        }
        <div style="text-align: center;">
            <GhostTile Show="@showGhost" CompletedFlag=@CompletedFlag />
        </div>
        
    }


    @* Determine if this ghost should be shown *@
    @* Ghosts are currently showing *@




</CascadingValue>

@code {
    [Parameter]
    public List<TileData> Tiles { get; set; }

    [Parameter]
    public Models.Enums.CourseRuntime BlockType { get; set; }

    [Parameter]
    public bool CompletedFlag { get; set; } = false;

    [CascadingParameter]
    public DegreePlan Plan { get; set; }

    private bool showGhost = false;
    private readonly int TOTAL_UNITS_ALLOWED = 50;


    protected override void OnParametersSet()
    {

        //Console.WriteLine(BlockType);
        //Error Management
        foreach (TileData tile in Tiles)
        {
            if (tile.Course == null) continue;
            if ((tile.Runtime & BlockType) == 0)
            {
                tile.Status |= ErrorStatus.WrongSemester;
            }
            //Console.WriteLine($"{tile.Course.Name}, {tile.Status} : {tile.Course.Runtime}, {BlockType}, {tile.Course.Runtime & BlockType}");
        }

        //===== GhostTile Management =====
        //Ghosts are showing AND this tile slot is not the origin AND the payload runs in this semester
        if (Plan.ShowGhosts && CompletedFlag && Plan.DragPayload.Course is not null)
        {
            showGhost = true;
        }
        else if (Plan.ShowGhosts && !Tiles.Contains(Plan.DragPayload) && RunsInSlot(Plan.DragPayload) && Tiles.Sum(c => c.Course?.Units ?? 10) + (Plan.DragPayload.Course?.Units ?? 10) <= TOTAL_UNITS_ALLOWED)
        {
            showGhost = true;
        }
        //Don't show the ghost of this tile slot
        else
        {
            showGhost = false;
        }

    }


    //Returns if a course runs in this slot
    private bool RunsInSlot(TileData td)
    {
        if (CompletedFlag == true)
        {
            if (td.Course == null)
            {
                return false;
            }
            return true;
        }
        if (td.Course == null)
        {
            //Empty tile, runs anywhere
            return true;
        }
        return (td.Runtime & BlockType) > 0;
    }

}
